services:
  auth_go:
    build:
      context: .
      dockerfile: ./cmd/auth/Dockerfile
    ports:
      - "44000:44000"
    image: auth-go-image
    container_name: auth-go
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - pg_db

  artists_go:
    build:
      context: .
      dockerfile: ./cmd/artists/Dockerfile
    ports:
      - "44001:44001"
    image: artists-go-image
    container_name: artists-go
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./files:/app/files
    depends_on:
      - mongo_db
      - albums_go

  tracks_go:
    build:
      context: .
      dockerfile: ./cmd/tracks/Dockerfile
    ports:
      - "44004:44004"
    image: tracks-go-image
    container_name: tracks-go
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./files:/app/files
    depends_on:
      - mongo_db
      - albums_go

  albums_go:
    build:
      context: .
      dockerfile: ./cmd/albums/Dockerfile
    ports:
      - "44002:44002"
    image: albums-go-image
    container_name: albums-go
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - mongo_db
      - artists_go

  profiles_go:
    build:
      context: .
      dockerfile: ./cmd/profiles/Dockerfile
    ports:
      - "44003:44003"
    image: profiles-go-image
    container_name: profiles-go
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - mongo_db
      - artists_go
      - albums_go

  clients_go:
    build:
      context: .
      dockerfile: ./internal/delivery/Dockerfile
    ports:
      - "8000:8000"
    image: clients-go-image
    container_name: clients-go
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./files:/app/files
    depends_on:
      - minio

  pg_db:
    image: postgres:16.4
    ports:
      - "54320:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pg_data:/var/lib/postgresql/data/
    container_name: pg_db
    restart: unless-stopped
    networks:
      - app-network
  minio:
    image: minio/minio:RELEASE.2025-02-18T16-25-55Z
    volumes:
      - ./static/:/data/
    ports:
      - 9000:9000
    command: server /data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}

  mongo_db:
    image: mongo
    container_name: mongo-db
    volumes:
      - mongo_data:/data/db
    environment:
      #- MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      #- MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    networks:
      - app-network

volumes:
  pg_data:
  mongo_data:
  go_back:

networks:
  app-network:
    driver: bridge
