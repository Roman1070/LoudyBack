// Code generated by MockGen. DO NOT EDIT.
// Source: /home/roma/roma/LoudyBack/internal/services/artists/init.go
//
// Generated by this command:
//
//	mockgen -source=/home/roma/roma/LoudyBack/internal/services/artists/init.go -destination=/home/roma/roma/LoudyBack/internal/services/artists/mocks/mockgen.go
//

// Package mock_artists is a generated GoMock package.
package mock_artists

import (
	context "context"
	models "loudy-back/internal/domain/models/artists"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// MockArtists is a mock of Artists interface.
type MockArtists struct {
	ctrl     *gomock.Controller
	recorder *MockArtistsMockRecorder
	isgomock struct{}
}

// MockArtistsMockRecorder is the mock recorder for MockArtists.
type MockArtistsMockRecorder struct {
	mock *MockArtists
}

// NewMockArtists creates a new mock instance.
func NewMockArtists(ctrl *gomock.Controller) *MockArtists {
	mock := &MockArtists{ctrl: ctrl}
	mock.recorder = &MockArtistsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArtists) EXPECT() *MockArtistsMockRecorder {
	return m.recorder
}

// Artist mocks base method.
func (m *MockArtists) Artist(ctx context.Context, name string) (models.Artist, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Artist", ctx, name)
	ret0, _ := ret[0].(models.Artist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Artist indicates an expected call of Artist.
func (mr *MockArtistsMockRecorder) Artist(ctx, name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Artist", reflect.TypeOf((*MockArtists)(nil).Artist), ctx, name)
}

// CreateArtist mocks base method.
func (m *MockArtists) CreateArtist(ctx context.Context, name, cover, bio string) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateArtist", ctx, name, cover, bio)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateArtist indicates an expected call of CreateArtist.
func (mr *MockArtistsMockRecorder) CreateArtist(ctx, name, cover, bio any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateArtist", reflect.TypeOf((*MockArtists)(nil).CreateArtist), ctx, name, cover, bio)
}
