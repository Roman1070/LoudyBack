syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
package content;

option go_package = "loudy.content.v1;contentv1";

service Content{
    rpc CreateArtist(CreateArtistRequest) returns (CreateArtistResponse);
    rpc Artist(ArtistRequest) returns (ArtistResponse);
    rpc CreateTrack(CreateTrackRequest) returns  (google.protobuf.Empty) {}
    rpc CreateAlbum(CreateAlbumRequest) returns (CreateAlbumResponse);
    rpc Album(AlbumRequest) returns (AlbumResponse);
    rpc SearchContent(SearchContentRequest) returns (SearchContentResponse);
}

message CreateArtistRequest{
    string name = 1;
    string cover = 2;
    string bio = 3;
}
message CreateArtistResponse{
    uint32 id=1;
}
message ArtistRequest{
    string name = 1;
}
message ArtistResponse{
    ArtistData data = 1;
}
message ArtistData{    
    uint32 id = 1;
    repeated AlbumDataLight albums = 2;
    uint32 likes_count=3;
    string bio = 4;
}
message AlbumDataLight{
    uint32 id = 1;
    string cover = 2;
    uint32 year = 3;
}
message CreateTrackRequest{
    string name = 1;
    string file = 2;
    uint32 album_id=3;
}
message CreateAlbumRequest{
    repeated uint32 artists_ids=1;
    string name=2;
    string cover = 3;
    repeated uint32 tracks_ids=4;
    google.protobuf.Timestamp release_date = 5;
}
message CreateAlbumResponse{
    uint32 id=1;
}
message AlbumRequest{
    uint32 id = 1;
}
message ArtistDataLight{
    uint32 id = 1;
    string cover = 2;
    string name = 3;
}
message TrackDataLight{
    uint32 id = 1;
    string name = 2;
    uint32 album_id = 3;
}
message AlbumResponse{
    AlbumData album = 1;
}
message AlbumData{    
    uint32 id = 1;
    repeated ArtistDataLight artists = 2;
    string name = 3;
    string cover = 4;
    repeated TrackDataLight tracks = 5;
    google.protobuf.Timestamp release_date = 6;
}
message SearchContentRequest{
    string input = 1;
}
message SearchContentResponse{
    repeated AlbumDataLight albums = 1;
    repeated TrackDataLight tracks = 2;
    repeated ArtistDataLight artists = 3;
}